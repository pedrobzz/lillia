/* eslint-disable @typescript-eslint/no-misused-promises */
import { useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";

import { api, type RouterOutputs } from "~/utils/api";

const PostCard: React.FC<{
  post: RouterOutputs["post"]["all"][number];
  onPostDelete?: () => void;
}> = ({ post, onPostDelete }) => {
  return (
    <div className="flex flex-row rounded-lg bg-white/10 p-4 transition-all hover:scale-[101%]">
      <div className="flex-grow">
        <h2 className="text-2xl font-bold text-pink-400">{post.title}</h2>
        <p className="mt-2 text-sm">{post.content}</p>
      </div>
      <div>
        <span
          className="cursor-pointer text-sm font-bold uppercase text-pink-400"
          onClick={onPostDelete}
        >
          Delete
        </span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const [prompt, setPrompt] = useState("");
  const postQuery = api.post.all.useQuery();

  const deletePostMutation = api.post.delete.useMutation({
    onSettled: () => postQuery.refetch(),
  });

  const { mutateAsync: handlePrompt, isLoading: openAiLoading } =
    api.openAi.handlePrompt.useMutation();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <div className="container mt-12 flex flex-col items-center justify-center gap-4 px-4 py-8">
          <h1 className="text-5xl font-extrabold tracking-tight sm:text-[5rem]">
            Lill<span className="text-pink-400">IA</span>
          </h1>

          <div className="flex gap-2">
            <input
              type="text"
              name="prompt"
              id=""
              onChange={(e) => setPrompt(e.target.value)}
              value={prompt}
              className="rounded p-1 text-black"
            />
            <button
              className="rounded bg-pink-400 p-2 font-bold disabled:opacity-50"
              disabled={openAiLoading}
              onClick={async () => {
                if (!prompt) return;
                const response = await handlePrompt({ prompt });
                console.log({ response, prompt });
                setPrompt("");
                await postQuery.refetch();
              }}
            >
              send prompt
            </button>
          </div>

          {postQuery.data ? (
            <div className="w-full max-w-2xl">
              {postQuery.data?.length === 0 ? (
                <span>There are no posts!</span>
              ) : (
                <div className="flex h-[40vh] justify-center overflow-y-scroll px-4 text-2xl">
                  <div className="flex w-full flex-col gap-4">
                    {postQuery.data?.map((p) => {
                      return (
                        <PostCard
                          key={p.id}
                          post={p}
                          onPostDelete={() => deletePostMutation.mutate(p.id)}
                        />
                      );
                    })}
                  </div>
                </div>
              )}
            </div>
          ) : (
            <p>Loading...</p>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
